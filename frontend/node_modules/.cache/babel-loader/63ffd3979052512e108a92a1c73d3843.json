{"ast":null,"code":"var _jsxFileName = \"/app/src/components/AudioCom.js\";\nimport React, { Component } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { WaveformContianer, Wave, PlayButton } from './Waveform.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Waveform extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false\n    };\n\n    this.handlePlay = () => {\n      this.setState({\n        playing: !this.state.playing\n      });\n      this.waveform.playPause();\n    };\n  }\n\n  componentDidMount() {\n    const track = document.querySelector('#track');\n    this.waveform = WaveSurfer.create({\n      barWidth: 3,\n      cursorWidth: 1,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 80,\n      progressColor: '#2D5BFF',\n      responsive: true,\n      waveColor: '#EFEFEF',\n      cursorColor: 'transparent'\n    });\n    this.waveform.load(track);\n  }\n\n  render() {\n    const url = '';\n    return /*#__PURE__*/_jsxDEV(WaveformContianer, {\n      children: [/*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: this.handlePlay,\n        children: !this.state.playing ? 'Play' : 'Pause'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wave, {\n        id: \"waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"track\",\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Waveform;","map":{"version":3,"sources":["/app/src/components/AudioCom.js"],"names":["React","Component","WaveSurfer","WaveformContianer","Wave","PlayButton","Waveform","state","playing","handlePlay","setState","waveform","playPause","componentDidMount","track","document","querySelector","create","barWidth","cursorWidth","container","backend","height","progressColor","responsive","waveColor","cursorColor","load","render","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,iBAAT,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,mBAApD;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;;AAAA,SAuB/BC,UAvB+B,GAuBlB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACA,WAAKG,QAAL,CAAcC,SAAd;AACD,KA1B8B;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AAEA,SAAKL,QAAL,GAAgBT,UAAU,CAACe,MAAX,CAAkB;AAChCC,MAAAA,QAAQ,EAAE,CADsB;AAEhCC,MAAAA,WAAW,EAAE,CAFmB;AAGhCC,MAAAA,SAAS,EAAE,WAHqB;AAIhCC,MAAAA,OAAO,EAAE,UAJuB;AAKhCC,MAAAA,MAAM,EAAE,EALwB;AAMhCC,MAAAA,aAAa,EAAE,SANiB;AAOhCC,MAAAA,UAAU,EAAE,IAPoB;AAQhCC,MAAAA,SAAS,EAAE,SARqB;AAShCC,MAAAA,WAAW,EAAE;AATmB,KAAlB,CAAhB;AAYA,SAAKf,QAAL,CAAcgB,IAAd,CAAmBb,KAAnB;AACD;;AAODc,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,EAAZ;AAEA,wBACE,QAAC,iBAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKpB,UAA1B;AAAA,kBACG,CAAC,KAAKF,KAAL,CAAWC,OAAZ,GAAsB,MAAtB,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,GAAG,EAAEqB;AAAvB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAxC8B;;AAyChC;AAED,eAAevB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\n\nimport { WaveformContianer, Wave, PlayButton } from './Waveform.styled';\n\nclass Waveform extends Component {  \n  state = {\n    playing: false,\n  };\n\n  componentDidMount() {\n    const track = document.querySelector('#track');\n\n    this.waveform = WaveSurfer.create({\n      barWidth: 3,\n      cursorWidth: 1,\n      container: '#waveform',\n      backend: 'WebAudio',\n      height: 80,\n      progressColor: '#2D5BFF',\n      responsive: true,\n      waveColor: '#EFEFEF',\n      cursorColor: 'transparent',\n    });\n\n    this.waveform.load(track);\n  };\n  \n  handlePlay = () => {\n    this.setState({ playing: !this.state.playing });\n    this.waveform.playPause();\n  };\n  \n  render() {\n    const url = '';\n\n    return (\n      <WaveformContianer>\n        <PlayButton onClick={this.handlePlay} >\n          {!this.state.playing ? 'Play' : 'Pause'}\n        </PlayButton>\n        <Wave id=\"waveform\" />\n        <audio id=\"track\" src={url} />\n      </WaveformContianer>\n    );\n  }\n};\n\nexport default Waveform;"]},"metadata":{},"sourceType":"module"}